# compile script:
# mkimage -A arm64 -O linux -T script -C none -a 0 -e 0 -n "Test Script" -d boot.cmd boot.scr
# First disable security features that might interfere
setenv verify n
setenv secured_boot 0
setenv bootdelay 3
setenv EnableSelinux permissive

# Enable debugging and testing
setenv bootverbose 1
setenv bootdebug 1
setenv debug_level 3
setenv diagnostic_level 3

# Enable console output
setenv stderr serial
setenv stdout serial
setenv stdin serial

# Turn off automatic boot
setenv bootretry -1
setenv bootdelay -1
setenv bootcount 0

# Save all environment changes
saveenv

# Print critical variables to verify setup
printenv bootverbose
printenv debug_level
printenv verify
printenv secured_boot
printenv EnableSelinux

# Basic device initialization 
mmc dev 0
mmc rescan

# Simple test of MMC availability
test "mmc dev 0" -eq 0

# Try loading kernel and test success
fatload mmc 0:1 ${loadaddr} Image
test $? -eq 0

# If that worked, try DTB
fatload mmc 0:1 ${fdt_addr_r} dtb
test $? -eq 0

# Boot if tests passed
test $? -eq 0 && booti ${loadaddr} - ${fdt_addr_r}